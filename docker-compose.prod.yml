services:
  traefik:
    image: traefik:v3
    command:
      - '--providers.docker=true'
      - '--entrypoints.web.address=:80'
      - '--entrypoints.websecure.address=:443'
      - '--certificatesresolvers.letsencrypt.acme.email=cert@evidencija.app' # Change to your domain
      - '--certificatesresolvers.letsencrypt.acme.storage=acme/acme.json'
      - '--certificatesresolvers.letsencrypt.acme.httpchallenge.entrypoint=web'
    ports:
      - '80:80'
      - '443:443'
    volumes:
      - '/var/run/docker.sock:/var/run/docker.sock:ro,z'
      - 'traefik-acme-vol:/acme:Z'
    networks:
      - internal
  app:
    depends_on:
      - postgres
    build:
      context: .
      dockerfile: docker/node.Dockerfile
    environment:
      ORIGIN: ${ORIGIN}
      DATABASE_URL: ${DATABASE_URL}
      SECRET: ${SECRET}
    networks:
      - internal
    labels:
      - 'traefik.enable=true'
      - 'traefik.http.routers.app.rule=Host(`evidencija.app`)' # Replace with your domain
      - 'traefik.http.routers.app.tls=true'
      - 'traefik.http.routers.app.tls.certresolver=letsencrypt'
      - 'traefik.http.services.app.loadbalancer.server.port=3000'
  postgres:
    build:
      context: .
      dockerfile: docker/postgres.Dockerfile
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    healthcheck:
      test: ['CMD', 'pg_isready', '-U', 'root', '-d', 'local', '-h', 'localhost']
      interval: 10s
      retries: 5
      timeout: 5s
      start_period: 10s
    networks:
      - internal
networks:
  internal:
volumes:
  traefik-acme-vol:
